# Netlify configuration file
# https://docs.netlify.com/configure-builds/file-based-configuration/

[build]
  command = "npm run netlify:clean"
  publish = "dist"
  ignore = "git diff --quiet $CACHED_COMMIT_REF $COMMIT_REF -- ./dev-dist/ ./node_modules/ ./dist/"

[build.environment]
  SKIP_ESLINT = "false"
  NODE_ENV = "production"
  ESLINT_NO_DEV_ERRORS = "true"
  # Skip binary installation for image optimization plugins
  SKIP_INSTALL_DEPS = "true"
  NETLIFY_USE_YARN = "false"
  # Increase Node memory limit for build
  NODE_OPTIONS = "--max-old-space-size=4096"
  # Set Node.js version to meet requirements for camera-controls@3.0.0
  NODE_VERSION = "20.11.0"

# Production context: all deploys from the Production branch set in your site's
# deploy contexts will inherit these settings.
[context.production]
  environment = { NODE_VERSION = "20.11.0" }

# Deploy Preview context: all deploys generated from a pull/merge request will
# inherit these settings.
[context.deploy-preview]
  environment = { NODE_VERSION = "20.11.0" }

# Branch Deploy context: deploys that aren't from a pull/merge request or from
# the Production branch will inherit these settings.
[context.branch-deploy]
  environment = { NODE_VERSION = "20.11.0" }

# Specific branch context: all deploys from this specific branch will inherit
# these settings.
[context.develop]
  environment = { NODE_VERSION = "20.11.0" }

# Asset optimization
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

# Headers to improve security and cache control
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https://www.google-analytics.com; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https://www.google-analytics.com; object-src 'none'"

# Cache control for static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Cache control for HTML and data files - shorter time
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

[[headers]]
  for = "/manifest.json"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

# Redirect rules
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

# SPA fallback
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
